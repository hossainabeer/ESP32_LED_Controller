#include <BluetoothSerial.h>

#define BUTTON_PIN 14
#define RED_LED_PIN 12
#define BLUE_LED_PIN 13

BluetoothSerial SerialBT;

int ledState = 0; // 0=OFF, 1=RED, 2=BLUE
int lastButtonState = HIGH;
unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50;

void setup() {
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  pinMode(RED_LED_PIN, OUTPUT);
  pinMode(BLUE_LED_PIN, OUTPUT);
  
  SerialBT.begin("ESP32_LED_Controller"); // Bluetooth device name
  Serial.begin(115200); // Optional serial debug
  
  updateLEDs(); // Initialize LED states
}

void loop() {
  int reading = digitalRead(BUTTON_PIN);
  
  // Debounce logic
  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  }
  
  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading == LOW && lastButtonState == HIGH) {
      ledState = (ledState + 1) % 3; // Cycle through 0,1,2
      updateLEDs();
      sendBluetoothMessage();
    }
  }
  
  lastButtonState = reading;
}

void updateLEDs() {
  digitalWrite(RED_LED_PIN, (ledState == 1));
  digitalWrite(BLUE_LED_PIN, (ledState == 2));
}

void sendBluetoothMessage() {
  switch(ledState) {
    case 0:
      SerialBT.println("LED: OFF");
      Serial.println("Sent: LED: OFF"); // Debug output
      break;
    case 1:
      SerialBT.println("LED: RED");
      Serial.println("Sent: LED: RED");
      break;
    case 2:
      SerialBT.println("LED: BLUE");
      Serial.println("Sent: LED: BLUE");
      break;
  }
}
